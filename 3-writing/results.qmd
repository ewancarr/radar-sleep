---
title: Tables and figures for RADAR sleep paper
author: Ewan Carr
date: "today"
published-title: "Updated"
title-block-banner: true
params:
  save_figs: TRUE
format:
  html:
    code-fold: true
    code-tools: true
    theme: flatly
    cache: true
    toc: true
    toc-location: right
    toc-depth: 3
    self-contained: true

bibliography: references.bib
editor_options: 
  chunk_output_type: console
---

# Introduction

This document summarises the latest results for the sleep paper.

```{r Load packages}
#| message: false
library(tidyverse)
library(here)
library(gt)
library(gtsummary)
library(paletteer)
library(patchwork)
library(ggdist)
library(naniar)
library(fs)
library(conflicted)
conflicts_prefer(dplyr::first)
conflicts_prefer(dplyr::filter)
load(here("a-data", "clean", "for_modelling.Rdata"))
source(here("1-cleaning", "extra", "labels.R"))
source(here("functions.R"))

median_iqr <- function(x, dp = 1) {
    x <- x[!is.na(x)]
    fdp <- function(val) { sprintf(str_glue("%.{dp}f"), val) }
    q <- quantile(x, c(0.25, 0.7))
    return(str_glue("{fdp(median(x, na.rm = TRUE))} ({fdp(q[1])}, {fdp(q[2])})"))
}

freq_pct <- function(x, dp = 1) {
    fdp <- function(val) { sprintf(str_glue("%.{dp}f"), val) }
    return(str_glue("{sum(x, na.rm = TRUE)} ({fdp(100 * mean(x, na.rm = TRUE))})"))
}

switch_decimal <- function(x) {
  str_replace_all(x, "\\.", "·")
}

fix_decimals <- function(tbl) {
  # Replace all "." in a gt table with "·".
  tbl |>
  text_transform(cells_body(),
                 function(x) str_replace(x, "\\.", "·"))
}

relabel_outcomes <- function(x) {
  lev <- c("Depression relapse",
           "Depression severity",
           "Depression severity (sleep items removed)")
  factor(case_match(x,
                    "rel_mod" ~ lev[1],
                    "ids_total" ~ lev[2],
                    "ids_nosleep" ~ lev[3]),
         levels = lev)
}
```

# Results

## Excluded participants

### Before excluding anyone

```{r}
sleep <- readRDS(here("a-data", "clean", "sleep.rds"))
survey <- readRDS(here("a-data", "clean", "survey.rds"))

print_n(sleep)
print_n(survey)
```

###

```{r}
merged <- readRDS(here("a-data", "clean", "merged.rds"))

# Specify required variables
sleep_vars <- c("tst_med",
                "tst_var",
                "cm3_tst_med",
                "cm3_tst_var",
                "slpeff_med",
                "sfi_med",
                "sol_med",
                "sol_var",
                "smid_var",
                "smid_med",
                "cm3_smid_med",
                "cm3_smid_var",
                "sjl")
sleep_vars <- paste0("we_", sleep_vars)

id <- c("user_id", "pid", "t", "n_days", "n_weekdays")

covariates <- c("age", "male",
                "atyp", "audit",
                "med_depress", "med_other", "med_sleep",
                "edyrs", "partner", 
                "sunshine")

outcomes <- c("rel_mod",
              "ids_total", "lag_ids_total",
              "ids_nosleep", "lag_ids_nosleep")
```

Before excluding anyone:

```{r}
print_n(merged)
```

After excluding observations without information on sleep:

```{r}
cc <- merged |> drop_na(all_of(sleep_vars))
print_n(cc)
```

After excluding those with less than 8 days/month of sleep data

```{r}
cc <- filter(cc, n_days >= 8)
print_n(cc)
```

After excluding individuals with missing covariates:

```{r}
cc <- cc |> drop_na(all_of(covariates))
print_n(cc)
```

Then, Sample 1, excluding missing relapse outcome:

```{r}
cc1 <- cc |> inner_join(s1, join_by("pid", "t"))
print_n(cc1)
```

And Sample 2, excluding missing IDS-SR outcome (current and lagged):

```{r}
cc2 <- cc |> inner_join(s2, join_by("pid", "t"))
print_n(cc2)
```

### Load analytical samples

```{r}
source(here("2-models", "init.R"))

d_relapse <- right_join(dat, s1, by = c("pid", "t"))
d_relapse <- bind_cols(d_relapse, scale_variables(d_relapse))
print_n(d_relapse)

d_ids <- right_join(dat, s2, by = c("pid", "t"))
d_ids <- bind_cols(d_ids, scale_variables(d_ids))
print_n(d_ids)
```

### Compare excluded participants vs. included

```{r}
compare_excluded <- bind_rows(
          filter(merged, !(user_id %in% cc2$user_id)) |>  mutate(samp = "Excluded"),
          cc1 |> mutate(samp = "Sample 1"),
          cc2 |> mutate(samp = "Sample 2")
)

tab_sup1 <- compare_excluded |>
  group_by(samp, pid) |>
  select(samp, age, ids_total, male, partner, edyrs, med_depress) |>
  summarise(across(everything(), first), .groups = "drop") |>
  select(-pid) |>
  tbl_summary(by = samp,
              missing_text = "Missing",
              label = list(age = "Age",
                           ids_total = "IDS-SR total score",
                           male = "Male gender",
                           edyrs = "Years of education",
                           partner = "Lives with partner",
                           med_depress = "Currently taking medication for depression")) |>
  as_gt() |>
  fix_decimals() |>
  opt_table_font(font = "Times New Roman")

# Table caption
# Supplementary Table 1: Comparing excluded vs. included individuals

gtsave(tab_sup1, here("3-writing", "tables", "tab_sup1.rtf"))
tab_sup1
```

## Sample characteristics

- **Sample 1** (Relapse)
  - Must have at least one assessment of the modified relapse outcome.
  - Must have information on sleep for month before the current and previous
    surveys.
  - Must have information on covariates.
- **Sample 2** (IDS-SR)
  - Must have at least one assessment of IDS severity.
  - Must have information on sleep for month before the current and previous
    surveys.
  - Must have information on covariates.

### Table 1: Characteristics of the analytical samples

```{r}
baseline <- dat |>
  group_by(pid) |>
  reframe(across(c(age, male, edyrs, partner,
                     med_depress, med_sleep, med_other, audit),
                 \(x) first(na.omit(x))))

b1 <- filter(baseline, pid %in% unique(s1$pid)) |> mutate(samp = "s1")
b2 <- filter(baseline, pid %in% unique(s2$pid)) |> mutate(samp = "s2")

top <- bind_rows(b1, b2) |>
  group_by(samp) |>
  summarise(across(c(age, edyrs, audit), median_iqr),
            across(c(male, partner, 
                     med_depress, med_sleep, med_other), \(x) freq_pct(x, 0))) |>
  pivot_longer(-samp) |>
  pivot_wider(names_from = samp) |>
  mutate(across(c(s1, s2), switch_decimal))

d_relapse$samp <- "s1"
d_ids$samp <- "s2"
bottom <- bind_rows(d_relapse, d_ids) |>
    group_by(samp) |>
    summarise(n_obs = str_glue("{n()}"),
              rel_mod = freq_pct(rel_mod),
              ids_total = median_iqr(ids_total)) |>
    pivot_longer(-samp)  |>
    pivot_wider(names_from = samp) |>
    mutate(s1 = if_else(name == "det", str_glue("--"), s1),
           s2 = if_else(name == "rel_mod", str_glue("--"), s2),
           across(c(s1, s2), switch_decimal))

row_labels <- data.frame(name = c("age", "edyrs", "male", "partner",
                                  "med_depress", "med_sleep", "med_other",
                                  "audit",
                                  "rel_mod", "ids_total",
                                  "n_obs"),
                        label = c("Age",
                                  "Years of education",
                                  "Male gender",
                                  "Lives with partner",
                                  "Medication (Depression)",
                                  "Medication (Sleep)",
                                  "Medication (Other)",
                                  "AUDIT total score",
                                  "Relapse",
                                  "IDS-SR total score",
                                  "No. follow-up assessments"),
                        type = as_vector(str_split("ccbbbbbcbcn", "")))

tab_1 <- bind_rows(top, bottom) |>
    left_join(row_labels, by = "name") |>
    select(-name, -type) |>
    gt(rowname_col = "label") |>
    cols_align(align = "right", columns = c(s1, s2)) |>
    tab_row_group(label = md("*Outcomes over follow-up*"),
                  rows = row_labels$label[9:11]) |>
    tab_row_group(label = md("*Participant characteristics at enrolment*"),
                 rows = row_labels$label[1:8]) |>
    tab_spanner(label = "Sample 1", columns = s1) |>
    tab_spanner(label = "Sample 2", columns = s2) |>
    cols_label(s1 = str_glue("n={length(unique(d_relapse$pid))} individuals"),
               s2 = str_glue("n={length(unique(d_ids$pid))} individuals")) |>
    opt_row_striping() |>
    tab_footnote(footnote = "Median (IQR).",
                 locations = cells_stub(rows = row_labels[row_labels$type == "c", ]$label)) |>
    tab_footnote(footnote = "N (%).",
                 locations = cells_stub(rows = row_labels[row_labels$type == "b", ]$label)) |>
    tab_footnote(footnote = "Note that these are overlapping samples. Participants in Sample 1 who also had at least one assessment of IDS-SR were also included in Sample 2.",
                 locations = cells_column_spanners()) |>
    tab_footnote(footnote = "Due to the definition of relapse, which excluded participants with chronic depression, participants in Sample 1 tended to report lower depression severity and lower use of antidepressant medication compared to Sample 2.",
                 locations = cells_body(rows = 11),
                 placement = "right") |>
    tab_options(footnotes.marks = c("*", "†", "‡", "§"),
                table.font.size = 10) |>
    tab_style(style = cell_text(align = 'center'), 
              locations = cells_column_labels()) |>
  opt_table_font(font = "Times New Roman")

# Table caption:
# Table 1: Characteristics of analytical samples
gtsave(tab_1,
       here("3-writing", "tables", "tab_1.html"))

tab_1
```

### Count number of people missing information on ethnicity

This is everyone in our analytical sample from the Barcelona site.

```{r}
site <- survey |>
  distinct(pid, site)

site |> 
  filter(pid %in% unique(s1$pid)) |>
  count(site) |>
  mutate(pct = n / sum(n))

site |> 
  filter(pid %in% unique(s2$pid)) |>
  count(site) |>
  mutate(pct = n / sum(n))

# Check how many missing relapse if remove Barcelona?

d_relapse |>
  inner_join(s1, join_by(pid, t)) |>
  summarise(n_relapse = sum(rel_mod))

d_relapse |>
  inner_join(s1, join_by(pid, t)) |>
  inner_join(site, join_by(pid)) |>
  group_by(site) |>
  summarise(n_relapse = sum(rel_mod)) 
  
  mutate(has_y = if_else(site == "CIBER", NA, rel_mod)) |>
  group_by(site) |>
  summarise(n_complete = n_complete(has_y))

site |>
  inner_join(s1, join_by("pid"), multiple = "all")
```

## Sleep measures

These figures will be included as supplementary.

```{r Create labels}
# Original sleep features
sleep_orig <- paste0("we_", trans) |> str_replace("_log", "")

# Centred/transformed sleep features
sleep_trans <- paste0("we_", trans, "_pmz")
```

```{r}
plot_data <- d_ids |>
  select(user_id,
         all_of(sleep_orig),
         all_of(sleep_trans)) |>
  drop_na(we_tst_med) |>
  pivot_longer(-user_id,
               names_to = "x",
               values_to = "value") |>
  left_join(labels, join_by("x"))

spec <- list(p1 = list(title = "Sleep duration",
                       vars = c("we_tst_med_pmz", "we_cm3_tst_med_pmz",
                                "we_tst_var_log_pmz", "we_cm3_tst_var_pmz"),
                       col = 1, nrows = 1, ncols = 4, w = 4),
             p2 = list(title = "Sleep quality",
                       vars = c("we_sfi_med_pmz", "we_slpeff_med_pmz",
                                "we_sol_med_pmz", "we_sol_var_log_pmz"),
                       col = 2, nrows = 1, ncols = 4, w = 4),
             p3 = list(title = "Sleep regularity",
                       vars = c("we_smid_med_pmz", "we_smid_var_log_pmz",
                                "we_cm3_smid_med_pmz", "we_cm3_smid_var_pmz",
                                "we_sjl_pmz"),
                       col = 3, nrows = 2, ncols = 4, w = 4))


draw_distribution <- function(data, i, standardise = FALSE) {
  if (standardise) {
    v <- i$vars
  } else {
    v <- str_replace_all(i$vars, "_log_pmz$|_pmz", "")
  }
  data$label <- data$label_trans
  p <- data |>
    filter(x %in% v) |>
    drop_na() |>
    mutate(x_f = factor(x, levels = v),
           label = label,
           label_f = forcats::fct_reorder(label, as.numeric(x_f))) |>
    ggplot(aes(x = value)) +
      stat_density(fill = pal[i$col]) +
      facet_wrap(~ label_f,
                 scale = "free",
                 nrow = i$nrows,
                 ncol = i$ncols,
                 labeller = labeller(label_f = label_wrap_gen(25))) +
      theme_ggdist() +
      theme(axis.title.x = element_blank(),
            text = element_text(family = "Times New Roman"),
            plot.title = element_text(size = 14, face = "bold")) +
      labs(title = i$title,
           y = "Density")
  p <- p + plot_spacer() + plot_layout(ncol = 2, widths = c(i$w, 4 - i$w))
  return(p)
}

pal <- paletteer_d("ghibli::KikiMedium", n = 5)[-1]

h <- c(1, 1, 2.2)
dist_orig <- map(spec, \(x) draw_distribution(plot_data, x)) |>
  wrap_plots(nrow = length(h),
             heights = h)

dist_trans <- map(spec,
                  ~ draw_distribution(plot_data, .x,
                                      standardise = TRUE)) |>
  wrap_plots(nrow = length(h),
             heights = h)
```

```{r}
ggsave(dist_orig,
       file = here("3-writing", "figures", "dist_orig.png"),
       dev = "png",
       width = 7,
       height = 9,
       dpi = 300)

ggsave(dist_trans,
       file = here("3-writing", "figures", "dist_trans.png"),
       dev = "png",
       width = 7,
       height = 9,
       dpi = 300)
```

# Summarise missing data

```{r}
d <-  merged |>
  filter(t <= 24) |>
  drop_na(all_of(str_replace(zcov, "z$", ""))) |>
  group_by(t)

pick_one <- \(ny, nx) ifelse(ny > nx, nx, ny)
  
get_n <- function(d, label, ...) {
  d <- summarise(d, across(c(...), n_complete))
  d <- data.frame(t = d[, 1], apply(d[, -1], 1, FUN = min))
  names(d) <- c("t", label)
  return(d)
}

get_count <- function(d, ...) {
  counts <- full_join(get_n(d, label = "y", ...),
                      get_n(d, label = "sleep", ..., all_of(sleep_vars)),
                      join_by("t")) |>
    mutate(sleep = if_else(sleep > y, y, sleep),
           pct = if_else(y == sleep, 1, sleep / y))
  return(counts)
}
                     
n_ids <- get_count(d, ids_total, lag_ids_total)
n_relmod <- get_count(d, rel_mod)

cbind(n_relmod, n_ids) |>
  write_csv(here("3-writing/tables/missing_data.csv"))

cbind(n_relmod, n_ids)
```

# Figure showing participation throughout RADAR-MDD

```{r}
d_ids |>
  mutate(n_fu = length(unique(t)), .by = "user_id") |>
  ggplot() +
  aes(x = t,
      fill = is.na(we_tst_med_pmz),
      y = reorder(user_id, n_fu)) +
  geom_point() +
  geom_line() +
  theme_minimal() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank())
```

# Describe changes in depression severity during follow-up

```{r}
change_in_ids <- d_ids |>
  select(pid, t, lag_ids_total, ids_total) |>
  mutate(cm3_ids = ids_total - lag_ids_total)

prop.table(table(abs(change_in_ids$cm3_ids < 4)))
```

# Process models

```{r Import and process fitted models}
fit <- list()
fit$ids <- readRDS(here("2-models", "samples", "2023-05-06-17-11_ids.rds"))
fit$relmod <- readRDS(here("2-models", "samples", "2023-05-05-16-15_relmod.rds"))
fit <- reduce(fit, bind_rows)

fit <- fit |>
  filter(cent == "pm",
         days == "we") |>
  mutate(key = str_glue("{days}_{x}_{cent}z")) |>
  left_join(labels, join_by("key" == "x")) |>
  mutate(y_label = relabel_outcomes(y),
         adj = if_else(adj == "", "Unadjusted", "Adjusted"))
```

## Average marginal effects

### Figure 1

This figure presents the 50% and 89% credible intervals.  The x-axis represents:

- For relapse and deterioration, the percentage point change in the probability of relapse per 1 SD difference in each sleep measure.
- For IDS-SR, the change in total score per 1 SD difference in each sleep
  measure.
  
```{r Extract/process AME posterior draws}
ame <- fit |>
  mutate(wp = map(ame, "within")) |>
  select(y, y_label, x, label_orig,
         adj, cent, days, wp, gr) |>
  unnest(cols = wp) 
  
# Convert posteriors for relapse to percentages
ame$wp[ame$y == "rel_mod"] <- ame$wp[ame$y == "rel_mod"] * 100
```


```{r}
#| fig-dpi: 300
#| fig-width: 9
#| fig-height: 8

draw_plot <- function(d) {
  d$gr <- paste("Sleep", tolower(d$gr), sep = "\n")
  pal <- paletteer_d("ghibli::KikiMedium", n = 5)[-1]
  d |>
  ggplot() +
  aes(x = wp,
      color = adj,
      y = label_orig) +
   geom_vline(xintercept = 0, color = pal[[1]], alpha = 0.5) +
   facet_grid(cols = vars(y_label),
             rows = vars(gr),
             space = "free_y",
             scales = "free") +
  theme_ggdist() + 
  stat_pointinterval(.width = c(0.50, 0.89),
                 position = position_dodge(width = 0.5)) +
  scale_color_manual(values = c(pal[[2]], pal[[3]])) +
  theme(strip.text.y = element_text(angle = 0),
        text = element_text(family = "Times New Roman"),
        panel.border = element_rect(color = "gray90", 
                                    fill = NA, 
                                    linewidth = 1),
        strip.background = element_rect(fill = "gray90"),
        strip.text.x = element_text(size = 11, face = "bold"),
        legend.title = element_blank(),
        axis.title.y = element_blank(),
        axis.text = element_text(size = 10),
        plot.margin = margin(0, 0, 0.2, 0.2, "cm"))
}

# Labels
# title: "Average marginal effects"
# subtitle: "Per 1 SD difference/change in each sleep measure"

plot_data <- filter(ame, y != "ids_nosleep")

lab_relapse <- "Percentage point change in the probability of relapse per standard deviation difference in sleep"
lab_ids <- "Change in IDS-SR score per standard deviation difference in sleep"
lab_w <- 40

left_plot <- ame |>
  filter(y == "rel_mod") |>
  draw_plot() +
  labs(x = str_wrap(lab_relapse, lab_w)) +
  theme(legend.position = "none",
  strip.text.y = element_blank())

right_plot <- ame |>
  filter(y == "ids_total") |>
  draw_plot() +
  labs(x = str_wrap(lab_ids, lab_w)) +
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank())

ame_plot <- left_plot + right_plot + plot_layout(widths = c(1, 0.95))

ggsave(ame_plot,
       file = here("3-writing", "figures", "ame_plot.png"),
       dev = "png",
       width = 10,
       height = 8,
       dpi = 300)

print(ame_plot)
```

### Supplementary Table: Average marginal effects

```{r}
#| tbl-cap: "Supplementary Table: Average Marginal Effects"
table_data <- ame |>
  group_by(gr, y, label_orig, adj) |>
  median_qi(wp,
            .width = 0.89) |>
  mutate(cell = paste0(sprintf('%.1f', wp),
                       "<br>[",
                       sprintf('%.1f', .lower),
                       ", ",
                       sprintf('%.1f', .upper),
                       "]"))

tab_ame <- table_data |>
  select(gr, label_orig, y, adj, cell) |>
  mutate(adj = ifelse(adj == "Unadjusted", "u", "a")) |>
  pivot_wider(names_from = c(y, adj),
              values_from = cell) |>
  group_by(gr) |>
  select(gr, label_orig,
         rel_mod_u, rel_mod_a,
         ids_total_u, ids_total_a,
         ids_nosleep_u, ids_nosleep_a) |>
  gt() |>
  fix_decimals() |>
  tab_spanner(label = md("Depression<br>relapse"),
              columns = starts_with("rel_mod")) |>
  tab_spanner(label = md("Depression severity<br>(IDS-SR)"),
              columns = starts_with("ids_total"))  |>
  tab_spanner(label = md("Depression severity<br>(IDS-SR; sleep items removed)"),
              columns = starts_with("ids_nosleep"))  |>
  cols_align(align = "center", columns = everything()) |>
  cols_align(align = "left", columns = label_orig) |>
  cols_label(label_orig = "",
             `rel_mod_u` = "Unadj.",
             `ids_total_u` = "Unadj.",
             `ids_nosleep_u` = "Unadj.",
             `rel_mod_a` = "Adj.",
             `ids_total_a` = "Adj.",
             `ids_nosleep_a` = "Adj.") |>
  tab_style(style = list(cell_text(weight = "bold")),
            locations = list(cells_row_groups(),
                             cells_title(),
                             cells_column_spanners())) |>
  opt_table_font(font = "Times New Roman") |>
  fmt_markdown(columns = everything())

tab_ame
```

## Adjusted predictions

```{r Prepare posterior draws}
features <- c("tst_med", "tst_var_log", "sfi_med", "slpeff_med")

adj_pred <- fit |> 
  select(y, y_label, x, label_orig, adj, cent, days, gr, pred) |>
  filter(x %in% features,
         adj == "Adjusted",
         y != "ids_nosleep")

adj_pred$pred <- 
  map(adj_pred$pred, \(x) {
  names(x) <- c("r", "draw")
  return(x)
  })

adj_pred <- unnest(adj_pred, cols = pred)

adj_pred$label_orig <- factor(adj_pred$label_orig,
                              levels = c("Total sleep time, median",
                                         "Total sleep time, variance",
                                         "Sleep efficiency, median",
                                         "Sleep fragmentation index, median"))
```

```{r Create plots}
# Plot for relapse ------------------------------------------------------------
colors <- c("#ffccbc", "#e64a19")

# p_relapse <- plot_data |>
  
p_relapse <- adj_pred |>
  filter(y  == "rel_mod") |>
  ggplot() +
  aes(x = r,
      y = draw) +
    stat_lineribbon(.width = c(0.5, 0.89)) +
    scale_fill_manual(values = colors, labels = c("89%", "50%")) +
    facet_grid(cols = vars(label_orig),
               scale = "free",
               labeller = labeller(label_orig = label_wrap_gen(15))) +
    theme_ggdist() +
    facet_title_horizontal() +
    axis_titles_bottom_left() +
    coord_cartesian(ylim = c(0, 0.25)) +
    labs(title = "Depression relapse",
         fill = "Credible\nintervals",
         x = "Standard deviations difference in sleep feature",
         y = str_wrap("Predicted probability of relapse", 10)) +
    theme(text = element_text(family = "Times New Roman"),
          legend.position = "none",
          axis.title.y = element_text(hjust = 0))

# Plot for IDS-SR -------------------------------------------------------------

p_ids <- adj_pred |>
  filter(y  == "ids_total") |>
  ggplot() +
  aes(x = r, 
      y = draw) +
    stat_lineribbon(.width = c(0.5, 0.89)) +
    scale_fill_manual(values = colors, labels = c("89%", "50%")) +
    facet_grid(cols = vars(label_orig),
               scale = "free",
               labeller = labeller(label_orig = label_wrap_gen(15))) +
    theme_ggdist() +
    facet_title_horizontal() +
    axis_titles_bottom_left() +
    coord_cartesian(ylim = c(24, 30)) +
    scale_y_continuous(breaks = 24:30) +
    labs(title = "Depression severity (IDS-SR)",
         fill = "Credible\nintervals",
         x = "Standard deviations difference in sleep feature",
         y = str_wrap("Predicted value of IDS-SR", 10)) +
    theme(text = element_text(family = "Times New Roman"),
          axis.title.y = element_text(hjust = 0))

# Combine and save ------------------------------------------------------------

p_combined <- p_relapse / p_ids

ggsave(p_combined,
       filename = here("3-writing", "figures", str_glue("predictions.png")),
       dpi = 300, dev = "png", width = 10, height = 8)

p_combined
```

## Sensitivity analyses

### 1. Differences by depression subtype

```{r Load posterior draws from interaction models}
int <- list()
int$relmod <- readRDS(here("2-models", "samples",
                           "2023-05-23-10-42_relmod_int.rds"))
int$ids <- readRDS(here("2-models", "samples",
                        "2023-05-05-08-25_ids_int.rds"))
int <- reduce(int, bind_rows)

int <- int |>
  filter(cent == "pm",
         days == "we",
         adj != "",
         y != "ids_nosleep")
```

The table below reports the difference in the ELPD (expected log predictive
density) for models with and without a 'sleep $\times$ atypical depression'
interaction term.

Generally, differences of 4 or greater would indicate evidence for the
alternative model[^loo].

[^loo]: https://avehtari.github.io/modelselection/CV-FAQ.html#5_How_to_use_cross-validation_for_model_selection

No models reach this threshold, i.e., no support for 'atypical depression
subtype' being a moderator.

In the table, the `elpd_diff` column is the difference between the two models.

* Values above zero indicate the interaction model is better.
* Values below zero indicate the non-interaction model is better.

But as above, none of these reach thresholds for significance.

See <https://discourse.mc-stan.org/t/if-elpd-diff-se-diff-2-is-this-noteworthy/20549/12>

```{r}
extract_elpd <- function(int) {
  loo_compare(int$wi,
              int$wo,
              criterion = "kfold")
}

int$elpd <- map(int$int, extract_elpd)

# Identify 'significant' differences as those where
# (1) The model _with_ the interaction is better (i.e., a positive value);
# (2) The elpd_diff is greater than (2 * se_diff)
# (3) The elpd_diff is > 4.

int <- bind_cols(int,
          map_dfr(int$elpd, \(d) {
            c(
              interaction_better = if_else(dimnames(d)[[1]][1] == "int$wi", 1, 0),
              elpd_diff = d[2, 1],
              se_diff = d[2, 2]
            )
          })
)

odp <- \(x) sprintf("%.1f", x)

interaction_table <- int |>
  mutate(elpd_diff = if_else(interaction_better == 1, -elpd_diff, elpd_diff),
         diff_se = elpd_diff / se_diff,
         sig = if_else((interaction_better == 1 & 
                        elpd_diff > 4 & 
                        abs(elpd_diff / se_diff) > 2), "*", ""),
         cell = str_glue("{odp(elpd_diff)} ({odp(se_diff)}{sig})"),
         key = str_glue("we_{x}_pmz")) |>
  left_join(labels, join_by(key == x)) |>
  select(gr, y, cell, label_orig) |>
  pivot_wider(names_from = y, values_from = cell)
  
interaction_table |>
  gt() |>
  cols_label(label_orig = "") |>
  cols_align(align = "right", columns = everything()) |>
  cols_align(align = "left", columns = label_orig) |>
  tab_style(style = list(cell_text(weight = "bold")),
            locations = list(cells_row_groups(),
                             cells_title(),
                             cells_column_spanners())) |>
  opt_table_font(font = "Times New Roman") 
```

```{r Investigate the significant interaction term}

fit <- int |>
  filter(y == "rel_mod",
         x == "tst_med") |>
  pluck("int", 1, "wo")

avg_slopes(fit, variables = "we_tst_med_pmz", by = "atyp")

```

### 2. Remove sleep items from IDS-SR

This is reported above in Supplementary Table 1.