---
title: Tables and figures for RADAR sleep paper
author: Ewan Carr
date: "today"
published-title: "Updated"
title-block-banner: true
params:
  save_figs: TRUE
format:
  html:
    code-fold: true
    code-tools: true
    theme: flatly
    cache: true
    toc: true
    toc-location: right
    toc-depth: 3
    self-contained: true
bibliography: references.bib
editor_options: 
  chunk_output_type: console
---

# Introduction

This document summarises the latest results for the sleep paper.

```{r Load packages}
#| message: false
library(tidyverse)
library(here)
library(gt)
library(gtsummary)
library(paletteer)
library(patchwork)
library(ggdist)
load(here("data", "clean", "for_modelling.Rdata"))
source(here("sleep", "cleaning", "extra", "labels.R"))
source(here("sleep", "functions.R"))

median_iqr <- function(x, dp = 1) {
    x <- x[!is.na(x)]
    fdp <- function(val) { sprintf(str_glue("%.{dp}f"), val) }
    q <- quantile(x, c(0.25, 0.7))
    return(str_glue("{fdp(median(x, na.rm = TRUE))} ({fdp(q[1])}, {fdp(q[2])})"))
}

freq_pct <- function(x, dp = 1) {
    fdp <- function(val) { sprintf(str_glue("%.{dp}f"), val) }
    return(str_glue("{sum(x, na.rm = TRUE)} ({fdp(100 * mean(x, na.rm = TRUE))})"))
}

switch_decimal <- function(x) {
  str_replace_all(x, "\\.", "·")
}

```

# Methods

## Outcomes

### 1. Modified relapse

This is modified to exclude participants with 'persistent high severity'.

| y   | Criteria                                                            |
|------------|------------------------------------------------------------|
| 1   | Meeting criteria for CIDI-SF **and** scoring \> 25 on IDS-SR.       |
| 0   | *Not* meeting criteria for relapse **and** scoring ≤ 25 on IDS-SR.  |
| NA  | *Not* meeting criteria for relapse **and** scoring \> 25 on IDS-SR. |

### 2. IDS severity

Total score at current 3-monthly survey.

## Sleep measures

At each 3-monthly survey, we're measuring:

1.  Sleep over the previous 4 weeks;
2.  Change in sleep between the previous survey (3 months ago) and now.

We're measuring sleep on weekdays only. (With the exception of 'social jet
lag'). To be included at a given survey, participants needed to provide sleep
data for at least 5 weekdays.

We're considering 3 types of measure:

* **Sleep duration** (4)
  - Total time
  - Total time, variance
  - Δ Total time
  - Δ Total time, variance
* **Sleep quality** (4)
  - Efficiency
  - Fragmentation index
  - Onset latency
  - Onset latency variance
* **Sleep regularity** (5)
  - Sleep midpoint
  - Sleep midpoint variance
  - Δ Sleep midpoint
  - Δ Sleep midpoint variance
  - Social jet lag


## Covariates

We're adjusting for:

- Age at enrolment
- Male gender (0/1)
- Medications
  - Whether taking depression medication (0/1)
  - Whether taking sleep medication (0/1)
  * Whether taking other medication (0/1)
- Years of education
- Partnership status
* Hours of sunshine last month

## Statistical analyses

- Binary logistic regression for relapse; linear regression
  for IDS-SR.
- Outcomes are measured repeatedly, at months 3-24.
- Data are pooled for analysis with individual random intercepts.
- All models estimated using Bayesian methods in
  [brms](https://paul-buerkner.github.io/brms/)/R.
- We consider non-linear effects of sleep, via quadratic terms.

The binary models are fairly straightforward, e.g.:

```r
y ~ sleep + sleep^2 + covariates + (1 | pid)
```

The linear models are a bit more involved:

- We're modelling the current IDS score while adjusting for the previous score
  (three months ago).
- We're including non-linear terms for the previous IDS score, to allow for the
  possibility of (i) negative effects of high past severity on future severity;
  and (ii) positive effects of low past severity on future severity. (This was
  suggested by Ingeborg).
- We're allowing for the effect of sleep to vary by previous depression
  severity.

Something like:

``` r
current_ids ~ previous_ids + sleep + (sleep*previous_ids) + (1 | pid)   
```

But where we include quadratic effects for all terms (`sleep` and
`previous_ids`).

## Sensitivity analyses

### 1. Differences by depression subtype

We will test whether the effect of sleep on each outcome is moderated by
'atypical' depression subtype.

This will be tested by comparing models with and without an interaction term
(sleep $\times$ atypical subtype) for each sleep measure.

Models are compared using leave-one-out cross-validation (LOO; @vehtari2017)

[@vehtari2017]

### 2. Remove sleep items from IDS-SR

We will repeat the IDS-SR models after removing the 4 questions about sleep:

1. Falling asleep
2. Sleep during the night
3. Waking up too early
4. Sleeping too much

# Results

## Excluded participants

### Before excluding anyone

```{r}
sleep <- readRDS(here("data", "clean", "sleep.rds"))
survey <- readRDS(here("data", "clean", "survey.rds"))

print_n(sleep)
print_n(survey)
```

###

```{r}
merged <- readRDS(here("data", "clean", "merged.rds"))

# Specify required variables
sleep_vars <- c("tst_med", "tst_var", "cm3_tst_med", "cm3_tst_var", "slpeff_med",
                "sfi_med", "sol_med", "sol_var", "smid_var", "smid_med", "cm3_smid_med",
                "cm3_smid_var", "sjl")
id <- c("user_id", "pid", "t", "n_days", "n_weekdays")
covariates <- c("age", "male",
                "atyp", "audit",
                "med_depress", "med_other", "med_sleep",
                "edyrs", "partner", 
                "sunshine")
outcomes <- c("rel", "rel_mod", "rel_5cat", 
              "ids_total", "lag_ids_total",
              "ids_nosleep", "lag_ids_nosleep")
```

Before excluding anyone:

```{r}
print_n(merged)
```

After excluding with missing sleep variables:

```{r}
cc <- merged |> drop_na(all_of(sleep_vars))
print_n(cc)
```

After excluding those with less than 8 days/month of sleep data

```{r}
cc <- filter(cc, n_weekdays >= 8)
print_n(cc)
```

After excluding individuals with missing covariates:

```{r}
cc <- cc |> drop_na(all_of(covariates))
print_n(cc)
```

Then, Sample 1, excluding missing relapse outcome:

```{r}
cc1 <- cc |> drop_na(rel_mod)
print_n(cc1)
```

And Sample 2, excluding missing IDS-SR outcome (current and lagged):

```{r}
cc2 <- cc |> drop_na(ids_total, lag_ids_total)
print_n(cc2)
```

### Compare excluded participants vs. included

```{r}
source(here("sleep", "models", "init.R"))

d_relapse <- right_join(dat, s1, by = c("pid", "t"))
print_n(d_relapse)

d_ids <- right_join(dat, s2, by = c("pid", "t"))
print_n(d_ids)

compare_excluded <- bind_rows(
          filter(dat, !(user_id %in% cc2$user_id)) |>  mutate(samp = "Excluded"),
          cc1 |> mutate(samp = "Sample 1"),
          cc2 |> mutate(samp = "Sample 2")
)

fix_decimals <- function(tbl) {
  tbl |>
  text_transform(cells_body(),
                 function(x) str_replace(x, "\\.", "·"))
}

tab_sup1 <- compare_excluded |>
  group_by(samp, pid) |>
  select(samp, age, ids_total, male, partner, edyrs, med_depress) |>
  summarise(across(everything(), first), .groups = "drop") |>
  select(-pid) |>
  tbl_summary(by = samp,
              missing_text = "Missing",
              label = list(age = "Age",
                           ids_total = "IDS-SR total score",
                           male = "Male gender",
                           edyrs = "Years of education",
                           partner = "Lives with partner",
                           med_depress = "Currently taking medication for depression")) |>
  as_gt() |>
  fix_decimals() |>
  opt_table_font(font = "Times New Roman")

# Table caption
# Supplementary Table 1: Comparing excluded vs. included individuals

gtsave(tab_sup1, here("sleep", "writing", "tables", "tab_sup1.rtf"))
tab_sup1
```

## Sample characteristics

- **Sample 1** (Relapse)
  - Must have at least one assessment of the modified relapse outcome.
  - Must have information on sleep for month before the current and previous
    surveys.
  - Must have information on covariates.
- **Sample 2** (IDS-SR)
  - Must have at least one assessment of IDS severity.
  - Must have information on sleep for month before the current and previous
    surveys.
  - Must have information on covariates.

### Table 2: Characteristics of the analytical samples

```{r}
baseline <- dat |>
  group_by(pid) |>
  summarise(across(c(age, male, edyrs, partner,
                     med_depress, med_sleep, med_other, audit),
                   ~ first(na.omit(.x))),
            .groups = "drop_last")

b1 <- filter(baseline, pid %in% unique(s1$pid)) |> mutate(samp = "s1")
b2 <- filter(baseline, pid %in% unique(s2$pid)) |> mutate(samp = "s2")

top <- bind_rows(b1, b2) |>
  group_by(samp) |>
  summarise(across(c(age, edyrs, audit), median_iqr),
            across(c(male, partner, 
                     med_depress, med_sleep, med_other), freq_pct, 0)) |>
  pivot_longer(-samp) |>
  pivot_wider(names_from = samp) |>
  mutate(across(c(s1, s2), switch_decimal))

d_relapse$samp <- "s1"
d_ids$samp <- "s2"
bottom <- bind_rows(d_relapse, d_ids) |>
    group_by(samp) |>
    summarise(n_obs = str_glue("{n()}"),
              rel_mod = freq_pct(rel_mod),
              ids_total = median_iqr(ids_total)) |>
    pivot_longer(-samp)  |>
    pivot_wider(names_from = samp) |>
    mutate(s1 = if_else(name == "det", str_glue("--"), s1),
           s2 = if_else(name == "rel_mod", str_glue("--"), s2),
           across(c(s1, s2), switch_decimal))

row_labels <- data.frame(name = c("age", "edyrs", "male", "partner",
                                  "med_depress", "med_sleep", "med_other",
                                  "audit",
                                  "rel_mod", "ids_total",
                                  "n_obs"),
                        label = c("Age",
                                  "Years of education",
                                  "Male gender",
                                  "Lives with partner",
                                  "Medication (Depression)",
                                  "Medication (Sleep)",
                                  "Medication (Other)",
                                  "AUDIT total score",
                                  "Relapse",
                                  "IDS-SR total score",
                                  "No. follow-up assessments"),
                        type = as_vector(str_split("ccbbbbbcbcn", "")))

tab_1 <- bind_rows(top, bottom) |>
    left_join(row_labels, by = "name") |>
    select(-name, -type) |>
    gt(rowname_col = "label") |>
    cols_align(align = "right", columns = c(s1, s2)) |>
    tab_row_group(label = md("*Outcomes over follow-up*"),
                  rows = row_labels$label[9:11]) |>
    tab_row_group(label = md("*Participant characteristics at enrolment*"),
                 rows = row_labels$label[1:8]) |>
    tab_spanner(label = "Sample 1", columns = s1) |>
    tab_spanner(label = "Sample 2", columns = s2) |>
    cols_label(s1 = str_glue("n={length(unique(d_relapse$pid))} individuals"),
               s2 = str_glue("n={length(unique(d_ids$pid))} individuals")) |>
    opt_row_striping() |>
    tab_footnote(footnote = "Median (IQR).",
                 locations = cells_stub(rows = row_labels[row_labels$type == "c", ]$label)) |>
    tab_footnote(footnote = "N (%).",
                 locations = cells_stub(rows = row_labels[row_labels$type == "b", ]$label)) |>
    tab_footnote(footnote = "Note that these are overlapping samples. Participants in Sample 1 who also had at least one assessment of IDS-SR were also included in Sample 2.",
                 locations = cells_column_spanners()) |>
    tab_footnote(footnote = "Due to the definition of relapse, which excluded participants with chronic depression, participants in Sample 1 tended to report lower depression severity and lower use of antidepressant medication compared to Sample 2.",
                 locations = cells_body(rows = 11),
                 placement = "right") |>
    tab_options(footnotes.marks = c("*", "†", "‡", "§"),
                table.font.size = 10) |>
    tab_style(style = cell_text(align = 'center'), locations = cells_column_labels()) |>
  opt_table_font(font = "Times New Roman")

# Table caption:
# Table 1: Characteristics of analytical samples
gtsave(tab_1,
       here("sleep", "writing", "tables", "tab_1.html"))

tab_1
```


### Notes

* Large difference in IDS-SR between samples; to be expected given relape definition.
* What else needs to go in this table?

## Sleep measures

These figures will be included as supplementary.

```{r}
untrans <- str_replace_all(trans, "z_|zlog_", "")

la <- labels |>
  mutate(x = str_replace_all(x, "z_|zlog_", "")) |>
  select(x, label = label_orig)
lb <- select(labels, x, label = label_trans)

plot_data <- cbind(as.data.frame(scale_variables(d_ids)), d_ids) |>
  select(user_id, all_of(trans), all_of(untrans)) |>
  drop_na(tst_med) |>
  pivot_longer(-user_id) |>
  left_join(bind_rows(la, lb), by = c("name" = "x"))
  
spec <- list(p1 = list(title = "Sleep duration",
                       vars = c("z_tst_med", "z_cm3_tst_med",
                                "zlog_tst_var", "z_cm3_tst_var"),
                       col = 1, nrows = 1, ncols = 4, w = 4),
             p2 = list(title = "Sleep quality",
                       vars = c("z_sfi_med", "z_slpeff_med",
                                "z_sol_med", "zlog_sol_var"),
                       col = 2, nrows = 1, ncols = 4, w = 4),
             p3 = list(title = "Sleep regularity",
                       vars = c("z_smid_med", "zlog_smid_var",
                                "z_cm3_smid_med", "z_cm3_smid_var",
                                "z_sjl"),
                       col = 3, nrows = 2, ncols = 4, w = 4))


draw_distribution <- function(data, i, standardise = FALSE) {
  if (standardise) {
    v <- i$vars
  } else {
    v <- str_replace_all(i$vars, "z_|zlog_", "")
  }
  p <- data |>
    filter(name %in% v) |>
    drop_na() |>
    mutate(name_f = factor(name, levels = v),
           label = label,
           label_f = forcats::fct_reorder(label, as.numeric(name_f))) |>
    ggplot(aes(x = value)) +
      stat_density(fill = pal[i$col]) +
      facet_wrap(~ label_f,
                 scale = "free",
                 nrow = i$nrows,
                 ncol = i$ncols,
                 labeller = labeller(label_f = label_wrap_gen(20))) +
      theme_ggdist() +
      theme(axis.title.x = element_blank(),
            text = element_text(family = "Times New Roman"),
            plot.title = element_text(size = 14, face = "bold")) +
      labs(title = i$title,
           y = "Density")
  p <- p + plot_spacer() + plot_layout(ncol = 2, widths = c(i$w, 4 - i$w))
  return(p)
}

pal <- paletteer_d("ghibli::KikiMedium", n = 5)[-1]

h <- c(1, 1, 2.2)
dist_orig <- map(spec, ~ draw_distribution(plot_data, .x)) |>
  wrap_plots(nrow = length(h),
             heights = h)

dist_trans <- map(spec,
                  ~ draw_distribution(plot_data, .x,
                                      standardise = TRUE)) |>
  wrap_plots(nrow = length(h),
             heights = h)
```

```{r}
ggsave(dist_orig,
       file = here("sleep", "writing", "figures", "dist_orig.png"),
       dev = "png",
       width = 7,
       height = 9,
       dpi = 300)

ggsave(dist_trans,
       file = here("sleep", "writing", "figures", "dist_trans.png"),
       dev = "png",
       width = 7,
       height = 9,
       dpi = 300)
```

# Regression models

## Average marginal effects (AME)

See [here](#whats-the-average-marginal-effect) for an explanation. This figure
presents the 50% and 89% credible intervals.

The x-axis represents:

- For relapse and deterioration, the percentage point change per 1 SD
  difference in each sleep measure.
- For IDS-SR, the change in total score per 1 SD difference in each sleep
  measure.

```{r}
#| fig-dpi: 300
#| fig-width: 9
#| fig-height: 8

ame_draws <- readRDS(here("sleep", "models", "processed", "ame_draws.rds"))

ame_draws <- ame_draws |>
  mutate(y_label = factor(case_when(y == "rel_mod" ~ "Relapse",
                                    y == "ids_total" ~ "IDS-SR"),
                          levels = c("Relapse", "IDS-SR")),
         gr = paste("Sleep\n", gr)) |>
  mutate(estimate = if_else(y_label == "Relapse",
                            estimate * 100, estimate))

# Labels
# title: "Average marginal effects"
# subtitle: "Per 1 SD difference/change in each sleep measure"

make_plot <- function(d) {
  d$full_label <- if_else(d$y == "rel_mod",
                          "Depression relapse",
                          "Depression severity")
  ggplot(d) +
  aes(x = estimate,
      y = label_orig,
      color = adj) +
  geom_vline(xintercept = 0, color = pal[[1]], alpha = 0.5) +
  stat_pointinterval(.width = c(0.89, 0.50),
                     position = position_dodge(width = 0.5)) +
  facet_grid(cols = vars(full_label),
             rows = vars(gr),
             space = "free_y",
             scales = "free") +
  theme_ggdist() + 
  scale_color_manual(values = c(pal[[2]], pal[[3]])) +
  theme(strip.text.y = element_text(angle = 0),
        text = element_text(family = "Times New Roman"),
        panel.border = element_rect(color = "gray90", fill = NA, size = 1),
        strip.background = element_rect(fill = "gray90"),
        strip.text.x = element_text(size = 11, face = "bold"),
        legend.title = element_blank(),
        axis.title.y = element_blank(),
        axis.text = element_text(size = 10),
        plot.margin = margin(0, 0, 0.2, 0.2, "cm"))
}

left_plot <- ame_draws |>
  filter(term %in% trans,
         y == "rel_mod") |>
  make_plot() +
  labs(x = "Percentage points") +
  theme(legend.position = "none",
  strip.text.y = element_blank())

right_plot <- ame_draws |>
  filter(term %in% trans,
         y == "ids_total") |>
  make_plot() +
  labs(x = "Change in IDS-SR score") +
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank())

ame_plot <- left_plot + right_plot + plot_layout(widths = c(1, 0.95))

ggsave(ame_plot,
       file = here("sleep", "writing", "figures", "ame_plot.png"),
       dev = "png",
       width = 10,
       height = 8,
       dpi = 300)

print(ame_plot)
```

:::{.column-page}


```{r}
#| tbl-cap: "Supplementary Table: Average Marginal Effects"
table_data <- ame_draws |>
  group_by(gr, y_label, label_orig, adj) |>
  median_qi(estimate,
            .width = 0.89) |>
  mutate(cell = paste0(sprintf('%.1f', estimate),
                       " [",
                       sprintf('%.1f', .lower),
                       ", ",
                       sprintf('%.1f', .upper),
                       "]"))

tab_ame <- table_data |>
  select(gr, label_orig, y_label, adj, cell) |>
  pivot_wider(names_from = c(y_label, adj),
              values_from = cell) |>
  group_by(gr) |>
  gt() |>
  fix_decimals() |>
  tab_spanner(label = "Depression relapse", columns = starts_with("Relapse_")) |>
  tab_spanner(label = "Depression severity (IDS-SR)", columns = starts_with("IDS-SR_")) |>
  cols_align(align = "center", columns = everything()) |>
  cols_align(align = "left", columns = label_orig) |>
  cols_label(label_orig = "",
             Relapse_Unadjust. = "Unadjusted",
             Relapse_Adjusted = "Adjusted",
             `IDS-SR_Unadjust.` = "Unadjusted",
             `IDS-SR_Adjusted` = "Adjusted") |>
  tab_style(style = list(cell_text(weight = "bold")),
            locations = list(cells_row_groups(),
                             cells_title(),
                             cells_column_spanners())) |>
  opt_table_font(font = "Times New Roman") |>
  fmt_markdown(columns = everything())

tab_ame
```

:::

## Sensitivity analysis

### 1. Differences by depression subtype

The table below reports the difference in the ELPD (expected log predictive
density) for models with and without a 'sleep $\times$ atypical depression'
interaction term.

Generally, differences of 4 or greater would indicate evidence for the
alternative model[^loo].

[^loo]: https://avehtari.github.io/modelselection/CV-FAQ.html#5_How_to_use_cross-validation_for_model_selection

No models reach this threshold, i.e., no support for 'atypical depression
subtype' being a moderator.

In the table, the `elpd_diff` column is the difference between the two models.

* Values above zero indicate the interaction model is better.
* Values below zero indicate the non-interaction model is better.

But as above, none of these reach thresholds for significance.

```{r}
comparisons <- readRDS(here("models", "processed", "by_atypical.rds"))
names(comparisons) <- c("model", "null", "elpd")

comparisons |>
  select(model, elpd) |>
  separate(model, c("y", "x", "adj"), "__") |>
  left_join(labels, by = "x") |>
  filter(adj == "adj",
         y != "ids_nosleep") |>
  select(gr, y, label_orig, elpd)  |>
  mutate(how_much = sprintf("%.2f", elpd),
         gr = paste("Sleep", gr),
         y = if_else(y == "ids_total",
                     "Depression severity (IDS-SR)",
                     "Depression relapse")) |>
  select(gr, y, label_orig, how_much) |>
  pivot_wider(names_from = y,
              values_from = how_much) |>
  gt() |>
  cols_label(label_orig = "") |>
  cols_align(align = "right", columns = everything()) |>
  cols_align(align = "left", columns = label_orig) |>
  tab_style(style = list(cell_text(weight = "bold")),
            locations = list(cells_row_groups(),
                             cells_title(),
                             cells_column_spanners())) |>
  opt_table_font(font = "Times New Roman") 
```

### 2. Remove sleep items from IDS-SR

The results are slightly attenuated, but conclusions unchanged.

```{r}
#| tbl-cap: "Supplementary Table: Average Marginal Effects for IDS-SR without sleep items"

ids_orig <- readRDS(here("sleep", "models",
                          "processed", "ame_draws.rds")) |>
  filter(y == "ids_total") |>
  mutate(gr = paste("Sleep\n", gr),
         y = "A")

ids_nosleep <-  readRDS(here("sleep", "models", "processed",
                                  "ame_nosleep.rds")) |>
  filter(y == "ids_nosleep") |>
  mutate(gr = paste("Sleep\n", gr),
         y = "B")

table_data <- bind_rows(ids_orig, ids_nosleep) |>
  group_by(gr, y, label_orig, adj) |>
  median_qi(estimate, .width = 0.89) |>
  mutate(cell = str_glue("{sprintf('%.1f', estimate)} [{sprintf('%.1f', .lower)}, {sprintf('%.1f', .upper)}]"))

table_data |>
  select(gr, label_orig, y, adj, cell) |>
  pivot_wider(names_from = c(y, adj),
              values_from = cell) |>
  group_by(gr) |>
  gt() |>
  tab_spanner(label = md("**IDS-SR**<br>*Original scale*"),
              columns = starts_with("A")) |>
  tab_spanner(label = md("**IDS-SR**<br>*Sleep items removed*"),
              columns = starts_with("B")) |>
  cols_label(label_orig = "",
             `A_Unadjust.` = "Unadjusted",
             `A_Adjusted` = "Adjusted",
             `B_Unadjust.` = "Unadjusted",
             `B_Adjusted` = "Adjusted") |>
  cols_align(align = "left", columns = label_orig) |>
  tab_style(style = list(cell_text(weight = "bold")),
            locations = list(cells_row_groups(),
                             cells_title())) |>
  opt_table_font(font = "Times New Roman") |>
  fix_decimals()
```

## How do I interpret a credible interval?

This is a Bayesian analysis where the posterior distribution is summarised using Credible Intervals (CrI). The purpose of credible intervals is to summarise uncertainty in an estimated parameter.

We're interested in the posterior distribution for a given effect, produced by combining a prior distribution with our data. The posterior distribution reflects the range of possible values for a parameter of interest. Some values are more likely than others.

Credible intervals are used to describe the distribution of the posterior distribution.

-   A 50% credible interval has a 50% probability of the true value falling within this range.
-   A 90% credible interval has a 90% probability of the true value falling within this range.

In most figures, I present the 50% and 89% credible intervals. But this choice is arbritrary -- all we're doing is summarising the posterior distribution.
